section	.data
    txt1 db "Primeiro Número: "
    tam_txt1 equ $ - txt1
    
    txt2 db "Segundo Número: "
    tam_txt2 equ $ - txt2
    
    txt3 db "Qual o tipo de operação: digite (+, -, *, / )"
    tam_txt3 equ $ - txt3
    
    txt4 db "Resultado: "
    tam_txt4 equ $ - txt4

    
section	.bss
	n1 resb 1
    n2 resb 1
    r resb 1
    rs resb 1

section	.text
global _start   
_start:                     
inicio:
    mov eax, 4
    mov ebx, 1
    mov ecx, txt1
    mov edx, tam_txt1
    int 0x80
    
    mov eax, 3
    mov ebx, 0
    mov ecx, n1
    int 0x80
    
    mov eax, 4
    mov ebx, 1
     mov ecx, txt2
    mov edx, tam_txt2
    int 0x80
    
    mov eax, 3
    mov ebx, 0
    mov ecx, n2
    int 0x80
    
laco:
    mov eax, 4
    mov ebx, 1
     mov ecx, txt3
    mov edx, tam_txt3
    int 0x80
    
    mov eax, 3
    mov ebx, 0
    mov ecx, r
    int 0x80

    mov al, [n1]
    mov bl, [n2]
    mov cl, [r]
    sub al, '0'
    sub al, '0'
   
    
compSOMA:
    CMP cl, '+'
    JE soma
    JNE compSUBTRACAO
    
compSUBTRACAO:
    CMP cl, '-'
    JE subtracao
    JNE compDIVISAO
    
    
compDIVISAO:
    CMP cl, '/'
    JE divisao
    JNE compMULTIPLICACAO 
    
compMULTIPLICACAO:    
    CMP cl, '*'
    JE multiplicacao
    JNE laco
    
soma: 
    add al,bl
    add al, '0'
    mov [rs],al
    JMP resultado
    
subtracao:
    sub al,bl
    add al, '0'
    mov [rs],al
    JMP resultado
    
divisao:
    div bl
    add al, '0'
    mov [rs],al
    JMP resultado
    
multiplicacao:
    mul bl
    add al, '0'
    mov [rs],al
    JMP resultado
    
resultado:
    
    mov eax, 4
    mov ebx, 1
    mov ecx, txt4
    mov edx, tam_txt4
    int 0x80
    
    mov eax, 4
    mov ebx, 1
    mov ecx, rs
    mov edx, 1
    int 0x80
    
    JMP inicio
    
mov eax, 1 
int 0x80

;Rodrigo Rodrigues Ribeiro Dutra
